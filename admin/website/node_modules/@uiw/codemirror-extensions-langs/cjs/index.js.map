{
  "version": 3,
  "names": [
    "langs",
    "apl",
    "StreamLanguage",
    "define",
    "asciiArmor",
    "asterisk",
    "c",
    "csharp",
    "scala",
    "kotlin",
    "shader",
    "nesC",
    "objectiveC",
    "objectiveCpp",
    "squirrel",
    "ceylon",
    "dart",
    "cmake",
    "cobol",
    "commonLisp",
    "crystal",
    "cypher",
    "d",
    "diff",
    "dtd",
    "dylan",
    "ebnf",
    "ecl",
    "eiffel",
    "elm",
    "factor",
    "fcl",
    "forth",
    "fortran",
    "gas",
    "gherkin",
    "groovy",
    "haskell",
    "haxe",
    "http",
    "idl",
    "jinja2",
    "mathematica",
    "mbox",
    "mirc",
    "modelica",
    "mscgen",
    "mumps",
    "nsis",
    "ntriples",
    "octave",
    "oz",
    "pig",
    "properties",
    "protobuf",
    "puppet",
    "q",
    "sas",
    "sass",
    "sieve",
    "smalltalk",
    "solr",
    "sparql",
    "spreadsheet",
    "stex",
    "textile",
    "tiddlyWiki",
    "tiki",
    "troff",
    "ttcn",
    "turtle",
    "velocity",
    "verilog",
    "vhdl",
    "wast",
    "webIDL",
    "xQuery",
    "yacas",
    "z80",
    "javascript",
    "jsx",
    "typescript",
    "tsx",
    "json",
    "html",
    "css",
    "python",
    "markdown",
    "base",
    "markdownLanguage",
    "codeLanguages",
    "languages",
    "xml",
    "sql",
    "mysql",
    "dialect",
    "MySQL",
    "pgsql",
    "PostgreSQL",
    "java",
    "rust",
    "cpp",
    "lezer",
    "php",
    "go",
    "shell",
    "lua",
    "swift",
    "tcl",
    "yaml",
    "vb",
    "powershell",
    "powerShell",
    "brainfuck",
    "stylus",
    "erlang",
    "nginx",
    "perl",
    "ruby",
    "pascal",
    "livescript",
    "liveScript",
    "scheme",
    "toml",
    "vbscript",
    "vbScript",
    "clojure",
    "coffeescript",
    "coffeeScript",
    "julia",
    "dockerfile",
    "dockerFile",
    "r",
    "langNames",
    "Object",
    "keys",
    "loadLanguage",
    "name"
  ],
  "sources": [
    "../src/index.ts"
  ],
  "sourcesContent": [
    "import { languages } from '@codemirror/language-data';\nimport { StreamLanguage } from '@codemirror/language';\nimport { markdown, markdownLanguage } from '@codemirror/lang-markdown';\nimport { javascript } from '@codemirror/lang-javascript';\nimport { html } from '@codemirror/lang-html';\nimport { css } from '@codemirror/lang-css';\nimport { json } from '@codemirror/lang-json';\nimport { python } from '@codemirror/lang-python';\nimport { xml } from '@codemirror/lang-xml';\nimport { sql, MySQL, PostgreSQL } from '@codemirror/lang-sql';\nimport { java } from '@codemirror/lang-java';\nimport { rust } from '@codemirror/lang-rust';\nimport { cpp } from '@codemirror/lang-cpp';\nimport { lezer } from '@codemirror/lang-lezer';\nimport { php } from '@codemirror/lang-php';\n\nimport { apl } from '@codemirror/legacy-modes/mode/apl';\nimport { asciiArmor } from '@codemirror/legacy-modes/mode/asciiarmor';\n// import { asn1 } from '@codemirror/legacy-modes/mode/asn1';\nimport { asterisk } from '@codemirror/legacy-modes/mode/asterisk';\nimport { brainfuck } from '@codemirror/legacy-modes/mode/brainfuck';\nimport { clike, c, csharp, scala, kotlin, shader, nesC, objectiveC, objectiveCpp, squirrel, ceylon, dart } from '@codemirror/legacy-modes/mode/clike';\nimport { clojure } from '@codemirror/legacy-modes/mode/clojure';\nimport { cmake } from '@codemirror/legacy-modes/mode/cmake';\nimport { cobol } from '@codemirror/legacy-modes/mode/cobol';\nimport { coffeeScript } from '@codemirror/legacy-modes/mode/coffeescript';\nimport { commonLisp } from '@codemirror/legacy-modes/mode/commonlisp';\nimport { crystal } from '@codemirror/legacy-modes/mode/crystal';\nimport { cypher } from '@codemirror/legacy-modes/mode/cypher';\nimport { d } from '@codemirror/legacy-modes/mode/d';\nimport { diff } from '@codemirror/legacy-modes/mode/diff';\nimport { dockerFile } from '@codemirror/legacy-modes/mode/dockerfile';\nimport { dtd } from '@codemirror/legacy-modes/mode/dtd';\nimport { dylan } from '@codemirror/legacy-modes/mode/dylan';\nimport { ebnf } from '@codemirror/legacy-modes/mode/ebnf';\nimport { ecl } from '@codemirror/legacy-modes/mode/ecl';\nimport { eiffel } from '@codemirror/legacy-modes/mode/eiffel';\nimport { elm } from '@codemirror/legacy-modes/mode/elm';\nimport { erlang } from '@codemirror/legacy-modes/mode/erlang';\nimport { factor } from '@codemirror/legacy-modes/mode/factor';\nimport { fcl } from '@codemirror/legacy-modes/mode/fcl';\nimport { forth } from '@codemirror/legacy-modes/mode/forth';\nimport { fortran } from '@codemirror/legacy-modes/mode/fortran';\nimport { gas } from '@codemirror/legacy-modes/mode/gas';\nimport { gherkin } from '@codemirror/legacy-modes/mode/gherkin';\nimport { go } from '@codemirror/legacy-modes/mode/go';\nimport { groovy } from '@codemirror/legacy-modes/mode/groovy';\nimport { haskell } from '@codemirror/legacy-modes/mode/haskell';\nimport { haxe } from '@codemirror/legacy-modes/mode/haxe';\nimport { http } from '@codemirror/legacy-modes/mode/http';\nimport { idl } from '@codemirror/legacy-modes/mode/idl';\nimport { jinja2 } from '@codemirror/legacy-modes/mode/jinja2';\nimport { julia } from '@codemirror/legacy-modes/mode/julia';\nimport { liveScript } from '@codemirror/legacy-modes/mode/livescript';\nimport { lua } from '@codemirror/legacy-modes/mode/lua';\nimport { mathematica } from '@codemirror/legacy-modes/mode/mathematica';\nimport { mbox } from '@codemirror/legacy-modes/mode/mbox';\nimport { mirc } from '@codemirror/legacy-modes/mode/mirc';\n// import { mllike } from '@codemirror/legacy-modes/mode/mllike';\nimport { modelica } from '@codemirror/legacy-modes/mode/modelica';\nimport { mscgen } from '@codemirror/legacy-modes/mode/mscgen';\nimport { mumps } from '@codemirror/legacy-modes/mode/mumps';\nimport { nginx } from '@codemirror/legacy-modes/mode/nginx';\nimport { nsis } from '@codemirror/legacy-modes/mode/nsis';\nimport { ntriples } from '@codemirror/legacy-modes/mode/ntriples';\nimport { octave } from '@codemirror/legacy-modes/mode/octave';\nimport { oz } from '@codemirror/legacy-modes/mode/oz';\nimport { pascal } from '@codemirror/legacy-modes/mode/pascal';\nimport { perl } from '@codemirror/legacy-modes/mode/perl';\nimport { pig } from '@codemirror/legacy-modes/mode/pig';\nimport { powerShell } from '@codemirror/legacy-modes/mode/powershell';\nimport { properties } from '@codemirror/legacy-modes/mode/properties';\nimport { protobuf } from '@codemirror/legacy-modes/mode/protobuf';\nimport { puppet } from '@codemirror/legacy-modes/mode/puppet';\nimport { q } from '@codemirror/legacy-modes/mode/q';\nimport { r } from '@codemirror/legacy-modes/mode/r';\n// import { rpm } from '@codemirror/legacy-modes/mode/rpm';\nimport { ruby } from '@codemirror/legacy-modes/mode/ruby';\nimport { sas } from '@codemirror/legacy-modes/mode/sas';\nimport { sass } from '@codemirror/legacy-modes/mode/sass';\nimport { scheme } from '@codemirror/legacy-modes/mode/scheme';\nimport { shell } from '@codemirror/legacy-modes/mode/shell';\nimport { sieve } from '@codemirror/legacy-modes/mode/sieve';\n// import { mode } from '@codemirror/legacy-modes/mode/simple-mode';\nimport { smalltalk } from '@codemirror/legacy-modes/mode/smalltalk';\nimport { solr } from '@codemirror/legacy-modes/mode/solr';\nimport { sparql } from '@codemirror/legacy-modes/mode/sparql';\nimport { spreadsheet } from '@codemirror/legacy-modes/mode/spreadsheet';\nimport { stex } from '@codemirror/legacy-modes/mode/stex';\nimport { stylus } from '@codemirror/legacy-modes/mode/stylus';\nimport { swift } from '@codemirror/legacy-modes/mode/swift';\nimport { tcl } from '@codemirror/legacy-modes/mode/tcl';\nimport { textile } from '@codemirror/legacy-modes/mode/textile';\nimport { tiddlyWiki } from '@codemirror/legacy-modes/mode/tiddlywiki';\nimport { tiki } from '@codemirror/legacy-modes/mode/tiki';\nimport { toml } from '@codemirror/legacy-modes/mode/toml';\nimport { troff } from '@codemirror/legacy-modes/mode/troff';\n// import { cfg } from '@codemirror/legacy-modes/mode/ttcn-cfg';\nimport { ttcn } from '@codemirror/legacy-modes/mode/ttcn';\nimport { turtle } from '@codemirror/legacy-modes/mode/turtle';\nimport { vb } from '@codemirror/legacy-modes/mode/vb';\nimport { vbScript } from '@codemirror/legacy-modes/mode/vbscript';\nimport { velocity } from '@codemirror/legacy-modes/mode/velocity';\nimport { verilog } from '@codemirror/legacy-modes/mode/verilog';\nimport { vhdl } from '@codemirror/legacy-modes/mode/vhdl';\nimport { wast } from '@codemirror/legacy-modes/mode/wast';\nimport { webIDL } from '@codemirror/legacy-modes/mode/webidl';\nimport { xQuery } from '@codemirror/legacy-modes/mode/xquery';\nimport { yacas } from '@codemirror/legacy-modes/mode/yacas';\nimport { yaml } from '@codemirror/legacy-modes/mode/yaml';\nimport { z80 } from '@codemirror/legacy-modes/mode/z80';\n\nexport const langs = {\n  apl: () => StreamLanguage.define(apl),\n  asciiArmor: () => StreamLanguage.define(asciiArmor),\n  // asn1: () => StreamLanguage.define(asn1),\n  asterisk: () => StreamLanguage.define(asterisk),\n  // clike: () => StreamLanguage.define(clike),\n  c: () => StreamLanguage.define(c),\n  csharp: () => StreamLanguage.define(csharp),\n  scala: () => StreamLanguage.define(scala),\n  kotlin: () => StreamLanguage.define(kotlin),\n  shader: () => StreamLanguage.define(shader),\n  nesC: () => StreamLanguage.define(nesC),\n  objectiveC: () => StreamLanguage.define(objectiveC),\n  objectiveCpp: () => StreamLanguage.define(objectiveCpp),\n  squirrel: () => StreamLanguage.define(squirrel),\n  ceylon: () => StreamLanguage.define(ceylon),\n  dart: () => StreamLanguage.define(dart),\n  cmake: () => StreamLanguage.define(cmake),\n  cobol: () => StreamLanguage.define(cobol),\n  commonLisp: () => StreamLanguage.define(commonLisp),\n  crystal: () => StreamLanguage.define(crystal),\n  cypher: () => StreamLanguage.define(cypher),\n  d: () => StreamLanguage.define(d),\n  diff: () => StreamLanguage.define(diff),\n  dtd: () => StreamLanguage.define(dtd),\n  dylan: () => StreamLanguage.define(dylan),\n  ebnf: () => StreamLanguage.define(ebnf),\n  ecl: () => StreamLanguage.define(ecl),\n  eiffel: () => StreamLanguage.define(eiffel),\n  elm: () => StreamLanguage.define(elm),\n  factor: () => StreamLanguage.define(factor),\n  fcl: () => StreamLanguage.define(fcl),\n  forth: () => StreamLanguage.define(forth),\n  fortran: () => StreamLanguage.define(fortran),\n  gas: () => StreamLanguage.define(gas),\n  gherkin: () => StreamLanguage.define(gherkin),\n  groovy: () => StreamLanguage.define(groovy),\n  haskell: () => StreamLanguage.define(haskell),\n  haxe: () => StreamLanguage.define(haxe),\n  http: () => StreamLanguage.define(http),\n  idl: () => StreamLanguage.define(idl),\n  jinja2: () => StreamLanguage.define(jinja2),\n  mathematica: () => StreamLanguage.define(mathematica),\n  mbox: () => StreamLanguage.define(mbox),\n  mirc: () => StreamLanguage.define(mirc),\n  modelica: () => StreamLanguage.define(modelica),\n  mscgen: () => StreamLanguage.define(mscgen),\n  mumps: () => StreamLanguage.define(mumps),\n  nsis: () => StreamLanguage.define(nsis),\n  ntriples: () => StreamLanguage.define(ntriples),\n  octave: () => StreamLanguage.define(octave),\n  oz: () => StreamLanguage.define(oz),\n  pig: () => StreamLanguage.define(pig),\n  properties: () => StreamLanguage.define(properties),\n  protobuf: () => StreamLanguage.define(protobuf),\n  puppet: () => StreamLanguage.define(puppet),\n  q: () => StreamLanguage.define(q),\n  sas: () => StreamLanguage.define(sas),\n  sass: () => StreamLanguage.define(sass),\n  sieve: () => StreamLanguage.define(sieve),\n  smalltalk: () => StreamLanguage.define(smalltalk),\n  solr: () => StreamLanguage.define(solr),\n  sparql: () => StreamLanguage.define(sparql),\n  spreadsheet: () => StreamLanguage.define(spreadsheet),\n  stex: () => StreamLanguage.define(stex),\n  textile: () => StreamLanguage.define(textile),\n  tiddlyWiki: () => StreamLanguage.define(tiddlyWiki),\n  tiki: () => StreamLanguage.define(tiki),\n  troff: () => StreamLanguage.define(troff),\n  ttcn: () => StreamLanguage.define(ttcn),\n  turtle: () => StreamLanguage.define(turtle),\n  velocity: () => StreamLanguage.define(velocity),\n  verilog: () => StreamLanguage.define(verilog),\n  vhdl: () => StreamLanguage.define(vhdl),\n  wast: () => StreamLanguage.define(wast),\n  webIDL: () => StreamLanguage.define(webIDL),\n  xQuery: () => StreamLanguage.define(xQuery),\n  yacas: () => StreamLanguage.define(yacas),\n  z80: () => StreamLanguage.define(z80),\n\n  javascript,\n  jsx: () => javascript({ jsx: true }),\n  typescript: () => javascript({ typescript: true }),\n  tsx: () => javascript({ jsx: true, typescript: true }),\n  json,\n  html,\n  css,\n  python,\n  markdown: () => markdown({ base: markdownLanguage, codeLanguages: languages }),\n  xml,\n  sql,\n  mysql: () => sql({ dialect: MySQL }),\n  pgsql: () => sql({ dialect: PostgreSQL }),\n  java,\n  rust,\n  cpp,\n  // clike: () => StreamLanguage.define(clike),\n  // clike: () => clike({ }),\n  lezer,\n  php,\n  go: () => StreamLanguage.define(go),\n  shell: () => StreamLanguage.define(shell),\n  lua: () => StreamLanguage.define(lua),\n  swift: () => StreamLanguage.define(swift),\n  tcl: () => StreamLanguage.define(tcl),\n  yaml: () => StreamLanguage.define(yaml),\n  vb: () => StreamLanguage.define(vb),\n  powershell: () => StreamLanguage.define(powerShell),\n  brainfuck: () => StreamLanguage.define(brainfuck),\n  stylus: () => StreamLanguage.define(stylus),\n  erlang: () => StreamLanguage.define(erlang),\n  nginx: () => StreamLanguage.define(nginx),\n  perl: () => StreamLanguage.define(perl),\n  ruby: () => StreamLanguage.define(ruby),\n  pascal: () => StreamLanguage.define(pascal),\n  livescript: () => StreamLanguage.define(liveScript),\n  scheme: () => StreamLanguage.define(scheme),\n  toml: () => StreamLanguage.define(toml),\n  vbscript: () => StreamLanguage.define(vbScript),\n  clojure: () => StreamLanguage.define(clojure),\n  coffeescript: () => StreamLanguage.define(coffeeScript),\n  julia: () => StreamLanguage.define(julia),\n  dockerfile: () => StreamLanguage.define(dockerFile),\n  r: () => StreamLanguage.define(r),\n};\n\n/** Language list */\nexport const langNames = Object.keys(langs) as LanguageName[];\nexport type LanguageName = keyof typeof langs;\n\nexport function loadLanguage(name: LanguageName) {\n  return langs[name] ? langs[name]() : null;\n}"
  ],
  "mappings": "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"
}